#lang lexer-t

module-id: rts/lexer
lexer: rts-lexer

-----
let x1 = obj.prop;
-----
IDENTIFIER let
IDENTIFIER x1
PUNCTUATOR =
IDENTIFIER obj
PUNCTUATOR .
IDENTIFIER prop
PUNCTUATOR ;
-----
let x2 = obj?.prop;
-----
IDENTIFIER let
IDENTIFIER x2
PUNCTUATOR =
IDENTIFIER obj
PUNCTUATOR ?.
IDENTIFIER prop
PUNCTUATOR ;
-----
let x3 = obj!;
-----
IDENTIFIER let
IDENTIFIER x3
PUNCTUATOR =
IDENTIFIER obj
PUNCTUATOR !
PUNCTUATOR ;
-----
let x4 = obj[1];
-----
IDENTIFIER let
IDENTIFIER x4
PUNCTUATOR =
IDENTIFIER obj
PUNCTUATOR [
NUMBER 1
PUNCTUATOR ]
PUNCTUATOR ;
-----
call(...obj);
-----
IDENTIFIER call
PUNCTUATOR (
PUNCTUATOR ...
IDENTIFIER obj
PUNCTUATOR )
PUNCTUATOR ;
-----
call?.<string>();
-----
IDENTIFIER call
PUNCTUATOR ?.
PUNCTUATOR <
IDENTIFIER string
PUNCTUATOR >
PUNCTUATOR (
PUNCTUATOR )
PUNCTUATOR ;
-----
let x = async <T1, T2>(p1: string): void => {};
-----
IDENTIFIER let
IDENTIFIER x
PUNCTUATOR =
IDENTIFIER async
PUNCTUATOR <
IDENTIFIER T1
PUNCTUATOR ,
IDENTIFIER T2
PUNCTUATOR >
PUNCTUATOR (
IDENTIFIER p1
PUNCTUATOR :
IDENTIFIER string
PUNCTUATOR )
PUNCTUATOR :
IDENTIFIER void
PUNCTUATOR =>
PUNCTUATOR {
PUNCTUATOR }
PUNCTUATOR ;
-----
let x2 = ++x1;
-----
IDENTIFIER let
IDENTIFIER x2
PUNCTUATOR =
PUNCTUATOR ++
IDENTIFIER x1
PUNCTUATOR ;
-----
let x2 = x1--;
-----
IDENTIFIER let
IDENTIFIER x2
PUNCTUATOR =
IDENTIFIER x1
PUNCTUATOR --
PUNCTUATOR ;
-----
const [{ field1 }] = array;
-----
IDENTIFIER const
PUNCTUATOR [
PUNCTUATOR {
IDENTIFIER field1
PUNCTUATOR }
PUNCTUATOR ]
PUNCTUATOR =
IDENTIFIER array
PUNCTUATOR ;
-----
let x = -1 + (2 - y) * 3 / 4 % 5 ** 6;
-----
IDENTIFIER let
IDENTIFIER x
PUNCTUATOR =
NUMBER -1
PUNCTUATOR +
PUNCTUATOR (
NUMBER 2
PUNCTUATOR -
IDENTIFIER y
PUNCTUATOR )
PUNCTUATOR *
NUMBER 3
PUNCTUATOR /
NUMBER 4
PUNCTUATOR %
NUMBER 5
PUNCTUATOR **
NUMBER 6
PUNCTUATOR ;
